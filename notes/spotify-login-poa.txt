Done!
spotify login plan of action:
- before each route load check is state has user.token
- if yes:
  - go ahead and load, displaying username
- if no:
  - redirect them to something like '/spotify-login/
  - have a spotify login button
  - clicking that redirects them to the normal spotify login page (calls our spotify auth route)
  - once the click agree/login it calls the node callback
  - we redirect them to the auth page passing the user.token and save it in the state

New plan w/mongo allowing cookies:
- before each route check if cookie exists (spotify-id)
  - cookie contains spotify user id
- if yes:
  - check if store has user data (imgUrl, user id)
    - if not, get it from api and then load normally
    - if yes load normally
- if no:
  - redirect them to '/spotify-login/'
  - ask user to click login button
  - go through regular process of login
    - create user data record for them in mongo
  - when frontend loads, set cookie (spotify-id = user.data.id)


New plan w/mongo not allowing cookies:
- before each route load check is state has user.id
- if yes:
  - go ahead and load normally
- if no:
  - redirect them to '/spotify-login/
  - have a spotify login button
  - clicking that redirects them to the normal spotify login page
  - once the click agree/login it calls the node callback
  - we redirect them to the auth page passing the user.token and save it in the state